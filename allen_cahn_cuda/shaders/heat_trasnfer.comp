#version 430 core

#ifndef CUSTOM_DEFINES
#define WORK_GROUP_SIZE_X 1
#define WORK_GROUP_SIZE_Y 1
#define WORK_GROUP_SIZE_Z 1
#endif

layout (local_size_x = WORK_GROUP_SIZE_X, local_size_y = WORK_GROUP_SIZE_Y, local_size_z = WORK_GROUP_SIZE_Z) in;

layout(r32f, binding = 0) uniform image2D next;
layout(r32f, binding = 1) uniform image2D prev;

uniform float alpha;
uniform float dt;
uniform int SIZE_X;
uniform int SIZE_Y;

float at(int x, int y)
{
	if(y >= SIZE_Y || y < 0)
		return 1;
		

	x = x % SIZE_X;
	return imageLoad(prev, ivec2(x, y)).r;
}

void main() {
	ivec2 center = ivec2(gl_GlobalInvocationID.xy);
	int x = center.x;
	int y = center.y;

	float dx2 = 1;
	float dy2 = 1;

	float u    = at(x, y);

    float u_py = at(x, y + 1);
    float u_my = at(x, y - 1);
    float u_px = at(x + 1, y);
    float u_mx = at(x - 1, y);
                            
    float laplace_x = (u_px + u_mx - 2*u)/dx2;
    float laplace_y = (u_py + u_my - 2*u)/dy2;
    float u_next = dt / alpha * (laplace_x + laplace_y) + u;

	vec4 written = vec4(u_next, 0, 0, 0);
	imageStore(next, center, written);
}
; This is a config file to be used with the allen_cahn solvers. 
; Place this file in the directory from which the executable will be run.
; A copy of this file gets saved alongside the captured state 

[program]
; Which solver to use? Below are comment options:

; solver = explicit
; solver = explicit-rk4
; solver = explicit-rk4-adaptive
solver = semi-implicit
; solver = semi-implicit-coupled

; Stops the experiment after 'stop_after' seconds. 
; If is interactive pauses the simulation. If not closes the program.
stop_after = 0.05

interactive = true
debug = true ; If set to true launches in debug mode. Debug mode has only effect in interactive mode and can be toggled with D
display_min = 0 ; Can be changed with R and inputting range into the console
display_max = 1 
linear_filtering = true ; Linearly interpolates the shown value making the gradient *prettier*. Can be toggled with L @TODO

[params]
sym_size = 4
L = 2
xi = 0.011
a = 2
b = 1
alpha = 3
beta = 800
Tm = 1
Tini = 0
L0 = 4

; anisothrophy
S = 0.3
m = 6
theta0 = 0 
do_anisotropy = true

[simulation]
dt = 0.00005
mesh_size_x = 256
mesh_size_y = 256

; target conjughate gradient solver average error. 
; If error tolerance cannot be reached until Phi/T_max_iters gives up and returns whatever
; was the last approximation.
T_tolerance = 1e-7
Phi_tolerance = 1e-7

; max ammount of iterations in the conjugate gradient method in solution of T/Phi 
; before giving up
T_max_iters = 10 
Phi_max_iters = 10 

; Tolerance of step residual corrector loop. 
; corrector_max_iters is the maximum number of iters before giving up on the target accuracy.
; This loop is very expensive and requires reruining of the entire step as such it effectively 
; multiplies the total running time by (1 + corrector_max_iters)
corrector_tolerance = 1e-3
corrector_max_iters = 5 

[initial]
inside_phi = 1
outside_phi = 0

inside_T= 1
outside_T= 0

circle_center = 2 2
circle_inner_radius = 0.1
circle_outer_radius = 0.15

square_from = 0 0
square_to = 0 0

[snapshot]
every = 9999999999 ;Capture snapshot every 'every' seconds (9999999999 effectively means never)
times = 0 ;Capture times snapshots uniformly distributed over the total running time
folder = snapshots
prefix = 
postfix = 
snapshot_initial_conditions = true
